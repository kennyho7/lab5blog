{
  "version": 3,
  "sources": ["../../routes/articles.ts"],
  "sourcesContent": ["import Router, {RouterContext} from \"koa-router\";\nimport bodyparser from \"koa-bodyparser\"\nimport * as model from \"../models/articles\";\n\nconst articles = [\n  {title: 'Hello article', fullText:'some text to fill the body'},\n  {title: 'another article', fullText:'another text to fill the body'},\n  {title: 'dllm article', fullText:'dllm'},\n  {title: 'smart campus', fullText:'smart campus'}\n];\n  \nconst router = new Router({prefix:'/api/v1/articles'});\n\nconst getAll = async (ctx: RouterContext, next:any) => {\n  //ctx.body = articles;\n  let articles = await model.getALL();\n  if(articles .length){\n    ctx.body = articles;\n  }else{\n    ctx.body = {};\n  }\n  await next();\n}\n\nconst createArticle = async (ctx: RouterContext, next:any) => {\n  /*let c: any = ctx.request.body;\n  let title =c.title;\n  let fullText = c.fullText;\n  let newArticle = {title:title, fullText: fullText};\n  articles.push(newArticle);\n  ctx.status = 201;\n  ctx.body = newArticle; */\n  const body = ctx.request.body;\n  let result = await model.add(body);\n  if(result.status==201){\n    ctx.status = 201;\n    ctx.body = body;\n  }else{\n    ctx.status = 500;\n    ctx.body = {err:\"insert data failed\"};\n  }\n  await next();\n}\n\nconst getById = async (ctx: RouterContext, next:any) => {\n  let id = +ctx.params.id;\n  /*if((id < articles.length +1) && (id>0)) {\n    ctx.body = articles[id-1];\n  }else {\n    ctx.status = 404;\n  }*/\n  let article = await model.getById(id);\n  if(article.length){\n    ctx.body = articles[0];\n  }else{\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst updateArticle = async (ctx: RouterContext, next:any) => {\n  let id = +ctx.params.id;\n  let {title, fullText} = ctx.request.body;\n  if((id < articles.length +1) && (id>0)) {\n    ctx.body = articles[id-1];\n    articles[id-1].title = title;\n    articles[id-1].fullText = fullText;\n    ctx.status = 200;\n    ctx.body = articles;\n  }else{\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst deleteArticle = async (ctx: RouterContext, next:any) => {\n  let id = +ctx.params.id;\n  if((id < articles.length +1) && (id>0)) {\n    articles.splice(id-1, 1);\n    ctx.status = 200;\n    ctx.body = articles;\n  }else{\n    ctx.status = 404;\n  }\n  await next();\n}\n\nrouter.get('/', getAll);\nrouter.post('/', bodyparser(), createArticle);\nrouter.get('/:id([0-9]{1,})', getById);\nrouter.put('/:id([0-9]{1,})', bodyparser(), updateArticle);\nrouter.delete('/:id([0-9]{1,})', deleteArticle);\n\nexport { router }; //point to index\n\n\n//let c: any = ctx.request.body;\n//let tille =c.tilte;\n//let fullText = c.fullText;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoC;AACpC,4BAAuB;AACvB,YAAuB;AAEvB,MAAM,WAAW;AAAA,EACf,EAAC,OAAO,iBAAiB,UAAS,6BAA4B;AAAA,EAC9D,EAAC,OAAO,mBAAmB,UAAS,gCAA+B;AAAA,EACnE,EAAC,OAAO,gBAAgB,UAAS,OAAM;AAAA,EACvC,EAAC,OAAO,gBAAgB,UAAS,eAAc;AACjD;AAEA,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAC,QAAO,mBAAkB,CAAC;AAErD,MAAM,SAAS,OAAO,KAAoB,SAAa;AAErD,MAAIC,YAAW,MAAM,MAAM,OAAO;AAClC,MAAGA,UAAU,QAAO;AAClB,QAAI,OAAOA;AAAA,EACb,OAAK;AACH,QAAI,OAAO,CAAC;AAAA,EACd;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAa;AAQ5D,QAAM,OAAO,IAAI,QAAQ;AACzB,MAAI,SAAS,MAAM,MAAM,IAAI,IAAI;AACjC,MAAG,OAAO,UAAQ,KAAI;AACpB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAK;AACH,QAAI,SAAS;AACb,QAAI,OAAO,EAAC,KAAI,qBAAoB;AAAA,EACtC;AACA,QAAM,KAAK;AACb;AAEA,MAAM,UAAU,OAAO,KAAoB,SAAa;AACtD,MAAI,KAAK,CAAC,IAAI,OAAO;AAMrB,MAAI,UAAU,MAAM,MAAM,QAAQ,EAAE;AACpC,MAAG,QAAQ,QAAO;AAChB,QAAI,OAAO,SAAS;AAAA,EACtB,OAAK;AACH,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAa;AAC5D,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,EAAC,OAAO,SAAQ,IAAI,IAAI,QAAQ;AACpC,MAAI,KAAK,SAAS,SAAQ,KAAO,KAAG,GAAI;AACtC,QAAI,OAAO,SAAS,KAAG;AACvB,aAAS,KAAG,GAAG,QAAQ;AACvB,aAAS,KAAG,GAAG,WAAW;AAC1B,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAK;AACH,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAa;AAC5D,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,KAAK,SAAS,SAAQ,KAAO,KAAG,GAAI;AACtC,aAAS,OAAO,KAAG,GAAG,CAAC;AACvB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAK;AACH,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAG,aAAa;AAC5C,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,IAAI,uBAAmB,sBAAAA,SAAW,GAAG,aAAa;AACzD,OAAO,OAAO,mBAAmB,aAAa;",
  "names": ["Router", "articles", "bodyparser"]
}
